[1mdiff --git a/Dockerfile b/Dockerfile[m
[1mindex 1aee6e2..bf72bbe 100644[m
[1m--- a/Dockerfile[m
[1m+++ b/Dockerfile[m
[36m@@ -1,12 +1,7 @@[m
[31m-FROM python:3.9-slim-bullseye[m
[32m+[m[32mFROM python-base[m
 [m
[31m-RUN mkdir -p /usr/src/app[m
 WORKDIR /usr/src/app[m
 [m
[31m-COPY requirements.txt /usr/src/app/[m
[31m-[m
[31m-RUN pip3 install --no-cache-dir -r requirements.txt[m
[31m-[m
 COPY . /usr/src/app[m
 [m
 EXPOSE 8080[m
[1mdiff --git a/swagger_server/messaging/rpc_queue_consumer.py b/swagger_server/messaging/rpc_queue_consumer.py[m
[1mindex f17fc17..7efb86b 100644[m
[1m--- a/swagger_server/messaging/rpc_queue_consumer.py[m
[1m+++ b/swagger_server/messaging/rpc_queue_consumer.py[m
[36m@@ -4,6 +4,7 @@[m [mimport os[m
 import threading[m
 from queue import Queue[m
 [m
[32m+[m[32mimport time[m
 import pika[m
 [m
 MQ_HOST = os.environ.get("MQ_HOST")[m
[36m@@ -22,9 +23,17 @@[m [mSUB_EXCHANGE = "connection"[m
 class RpcConsumer(object):[m
     def __init__(self, thread_queue, exchange_name):[m
         self.logger = logging.getLogger(__name__)[m
[32m+[m[32m        SLEEP_TIME = 60[m
[32m+[m[32m        self.logger.info(' [*] Sleeping for %s seconds.', SLEEP_TIME)[m
[32m+[m[32m        time.sleep(SLEEP_TIME)[m
[32m+[m
[32m+[m[32m        self.logger.info(' [*] Connecting to server ...')[m
[32m+[m[32m        credentials = pika.PlainCredentials('mq_user', 'mq_pwd')[m
         self.connection = pika.BlockingConnection([m
[31m-            pika.ConnectionParameters(host=MQ_HOST)[m
[31m-        )[m
[32m+[m[32m                pika.ConnectionParameters('rabbitmq3', 5672, '/', credentials))[m
[32m+[m[32m        # self.connection = pika.BlockingConnection([m
[32m+[m[32m        #    pika.ConnectionParameters(host=MQ_HOST)[m
[32m+[m[32m        # )[m
 [m
         self.channel = self.connection.channel()[m
         self.exchange_name = exchange_name[m
[36m@@ -43,9 +52,17 @@[m [mclass RpcConsumer(object):[m
         response = message_body[m
         self._thread_queue.put(message_body)[m
 [m
[32m+[m[32m        SLEEP_TIME = 60[m
[32m+[m[32m        self.logger.info(' [*] Sleeping for %s seconds.', SLEEP_TIME)[m
[32m+[m[32m        time.sleep(SLEEP_TIME)[m
[32m+[m
[32m+[m[32m        self.logger.info(' [*] Connecting to server ...')[m
[32m+[m[32m        credentials = pika.PlainCredentials('mq_user', 'mq_pwd')[m
         self.connection = pika.BlockingConnection([m
[31m-            pika.ConnectionParameters(host=MQ_HOST)[m
[31m-        )[m
[32m+[m[32m                pika.ConnectionParameters('rabbitmq3', 5672, '/', credentials))[m
[32m+[m[32m        # self.connection = pika.BlockingConnection([m
[32m+[m[32m        #     pika.ConnectionParameters(host=MQ_HOST)[m
[32m+[m[32m        #  )[m
         self.channel = self.connection.channel()[m
 [m
         ch.basic_publish([m
[1mdiff --git a/swagger_server/messaging/topic_queue_consumer.py b/swagger_server/messaging/topic_queue_consumer.py[m
[1mindex 40cb69c..b9e29cf 100644[m
[1m--- a/swagger_server/messaging/topic_queue_consumer.py[m
[1m+++ b/swagger_server/messaging/topic_queue_consumer.py[m
[36m@@ -5,6 +5,7 @@[m [mimport os[m
 import threading[m
 from queue import Queue[m
 [m
[32m+[m[32mimport time[m
 import pika[m
 import requests[m
 [m
[36m@@ -29,9 +30,19 @@[m [mdef is_json(myjson):[m
 class TopicQueueConsumer(object):[m
     def __init__(self, thread_queue, exchange_name):[m
         self.logger = logging.getLogger(__name__)[m
[32m+[m
[32m+[m
[32m+[m[32m        SLEEP_TIME = 60[m
[32m+[m[32m        self.logger.info(' [*] Sleeping for %s seconds.', SLEEP_TIME)[m
[32m+[m[32m        time.sleep(SLEEP_TIME)[m
[32m+[m
[32m+[m[32m        self.logger.info(' [*] Connecting to server ...')[m
[32m+[m[32m        credentials = pika.PlainCredentials('mq_user', 'mq_pwd')[m
         self.connection = pika.BlockingConnection([m
[31m-            pika.ConnectionParameters(host=MQ_HOST)[m
[31m-        )[m
[32m+[m[32m                pika.ConnectionParameters('rabbitmq3', 5672, '/', credentials))[m
[32m+[m[32m        # self.connection = pika.BlockingConnection([m
[32m+[m[32m        #     pika.ConnectionParameters(host=MQ_HOST)[m
[32m+[m[32m        #  )[m
 [m
         self.channel = self.connection.channel()[m
         self.exchange_name = exchange_name[m
[36m@@ -53,9 +64,18 @@[m [mclass TopicQueueConsumer(object):[m
         response = message_body[m
         self._thread_queue.put(message_body)[m
 [m
[32m+[m[32m        SLEEP_TIME = 60[m
[32m+[m[32m        self.logger.info(' [*] Sleeping for %s seconds.', SLEEP_TIME)[m
[32m+[m[32m        time.sleep(SLEEP_TIME)[m
[32m+[m
[32m+[m[32m        self.logger.info(' [*] Connecting to server ...')[m
[32m+[m[32m        credentials = pika.PlainCredentials('mq_user', 'mq_pwd')[m
         self.connection = pika.BlockingConnection([m
[31m-            pika.ConnectionParameters(host=MQ_HOST)[m
[31m-        )[m
[32m+[m[32m                pika.ConnectionParameters('rabbitmq3', 5672, '/', credentials))[m
[32m+[m[32m        # self.connection = pika.BlockingConnection([m
[32m+[m[32m        #     pika.ConnectionParameters(host=MQ_HOST)[m
[32m+[m[32m        #  )[m
[32m+[m
         self.channel = self.connection.channel()[m
 [m
         ch.basic_publish([m
