openapi: 3.0.0
info:
  title: SDX LC
  description: SDX Topology validation
  version: '1.0.0'
  contact:
    email: lmarinve@fiu.edu
servers:
  - url: '/api/kytos/sdx_topology'
tags:
- name: topology
  description: Everything about your domain topology
  externalDocs:
    description: Find out more
    url: https://www.atlanticwave-sdx.net
- name: node
  description: everything about a node in your domain
- name: link
  description: everything about a link in your domain
- name: user
  description: Operations about user
  externalDocs:
    description: Find out more about our store
    url: https://www.atlanticwave-sdx.net
paths:
  /v1/validate:
    post:
      tags:
      - topology
      summary: Send a new topology to SDX-LC
      description: Create a topology
      operationId: add_topology
      requestBody:
        description: placed for adding a new topology
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - id
              - name
              - version
              - model_version
              - timestamp
              - nodes
              - links
              additionalProperties: false
              properties:
                  id:
                    type: string
                    pattern: '^((urn:sdx:topology:)[A-Za-z_.:-]*$)'
                  name:
                    type: string
                    minLength: 3
                    maxLength: 30
                    pattern: '^[A-Za-z_.-]*$'
                  version:
                    type: integer
                    format: int64
                  model_version:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
                  nodes:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      required:
                        - id
                        - name
                        - location
                        - ports
                      additionalProperties: false
                      properties:
                        id:
                          type: string
                          pattern: '^((urn:sdx:node:)[A-Za-z_.-\:]*$)'
                        name:
                          type: string
                          minLength: 3
                          maxLength: 30
                          pattern: '^[A-Za-z0-9_.-]*$'
                        location:
                          $ref: '#/components/schemas/location'
                        ports:
                          type: array
                          minItems: 1
                          items:
                            $ref: '#/components/schemas/port'
                  links:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      required:
                        - id
                        - name
                        - ports
                        - bandwidth
                        - type
                        - status
                        - state
                      additionalProperties: false
                      properties:
                        id:
                          type: string
                          pattern: '^((urn:sdx:link:)[A-Za-z_.-\:]*$)'
                        name:
                          type: string
                          minLength: 3
                          maxLength: 30
                          pattern: '^[A-Za-z0-9_.-/]*$'
                        ports:
                          type: array
                          additionalProperties: false
                          minItems: 1
                          items:
                            type: string
                            pattern: '^((urn:sdx:port:)[A-Za-z_.-\:]*$)'
                        type:
                          type: string
                          enum: ['intra','inter']
                        bandwidth:
                          type: number
                          minimum: 125000000
                          maximum: 50000000000
                        residual_bandwidth:
                          type: number
                          minimum: 0
                          maximum: 100
                        latency:
                          type: number
                          minimum: 0
                          maximum: 50000000000
                        packet_loss:
                          type: number
                          minimum: 0
                          maximum: 100
                        availability:
                          type: number
                          minimum: 0
                          maximum: 100
                        status:
                          type: string
                          enum: ['up','down','error']
                        state:
                          type: string
                          enum: ['enabled','disabled','maintenance']
            examples:
              post Topology:
                value:
                  id: urn:sdx:topology:amlight.net
                  name: AmLight-OXP
                  version: 2
                  model_version: 1.0.0
                  timestamp: '2021-07-07T21:19:40Z'
                  nodes: 
                    [
                      {
                        "name": "Ampath1",
                        "id": "urn:sdx:node:amlight.net:Ampath1",
                        "location":
                          {
                            "address": "Equinix MI1, Miami, FL",
                            "latitude": 0,
                            "longitude": 0
                          },
                        "ports":
                          [
                            {
                              "id": "urn:sdx:port:amlight.net:Ampath1:1",
                              "name": "Ampath1-eth1",
                              "node": "urn:sdx:node:amlight.net:Ampath1",
                              "type": "10GE",
                              "status": "up",
                              "state": "enabled",
                              "services": "l2vpn",
                              "nni": "False",
                              "mtu": 9000
                            },
                            {
                              "id": "urn:sdx:port:amlight.net:Ampath1:2",
                              "name": "Ampath1-eth2",
                              "node": "urn:sdx:node:amlight.net:Ampath1",
                              "type": "10GE",
                              "status": "up",
                              "state": "enabled",
                              "services": "l2vpn",
                              "nni": "False",
                              "mtu": 9000
                            }
                          ]
                      }
                    ]
                  links:
                    [
                      {
                        "name": "Ampath3/2_Ampath1/2",
                        "id": "urn:sdx:link:amlight.net:Ampath3/2_Ampath1/2",
                        "ports":
                          [
                            "urn:sdx:port:amlight.net:Ampath3:2",
                            "urn:sdx:port:amlight.net:Ampath1:2"
                          ],
                        "type": "intra",
                        "bandwidth": 1250000000,
                        "residual_bandwidth": 80,
                        "latency": 25,
                        "packet_loss": 0.006255,
                        "availability": 99.5,
                        "status": "up",
                        "state": "enabled"
                      },
                      {
                        "name": "Ampath3/3_Ampath2/3",
                        "id": "urn:sdx:link:amlight.net:Ampath3/3_Ampath2/3",
                        "ports":
                          [
                            "urn:sdx:port:amlight.net:Ampath3:3",
                            "urn:sdx:port:amlight.net:Ampath2:3"
                          ],
                        "type": "intra",
                        "bandwidth": 1250000000,
                        "residual_bandwidth": 31,
                        "latency": 16,
                        "packet_loss": 0.0029453,
                        "availability": 99.5,
                        "status": "up",
                        "state": "enabled"
                      }
                    ]
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid Connection
        "405":
          description: Invalid input
        "default":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
components:
  schemas:
    port:
      type: object
      required:
        - id
        - name
        - node
        - type
        - status
        - state
      additionalProperties: false
      properties:
        id:
          type: string
          pattern: '^((urn:sdx:port:)[A-Za-z_.-\:]*$)'
        name:
          type: string
          minLength: 3
          maxLength: 30
          pattern: '^[A-Za-z0-9_.-]*$'
        node:
          type: string
          pattern: '^((urn:sdx:node:)[A-Za-z_.-\:]*$)'
        type:
          type: string
          enum: ['1GE','10GE','25GE','40GE','50GE','100GE','400GE','Other']
        status:
          type: string
          enum: ['up','down','error']
        state:
          type: string
          enum: ['enabled','disabled']
        services:
          type: string
        nni:
          type: string
        mtu:
          type: integer
          format: int32
    location:
      type: object
      required:
        - address
        - latitude
        - longitude
      properties:
        address:
          type: string
        latitude:
          type: number
          minimum: -90.0
          maximum: 90.0
        longitude:
          type: number
          minimum: -90.0
          maximum: 90.0
    ErrorMessage:
      type: object
      required:
        - error_code
        - error_message
      properties:
        error_code:
          type: string
        error_message:
          type: string
