################################################################
# This docker-compose file is meant for LOCAL development only #
################################################################

version: '3.3'

services:
  mongo-setup:
    container_name: mongo-rs-init
    image: mongo:5.0
    restart: on-failure
    volumes:
      - ./docker/scripts:/scripts
    entrypoint: ["/scripts/rs-init.sh"]
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root_user}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-root_pw}
      MONGO_USERNAME: ${MONGO_USERNAME:-napp_user}
      MONGO_PASSWORD: ${MONGO_PASSWORD:-napp_pw}
      MONGO_DBNAME: ${MONGO_DBNAME:-napps}
    depends_on:
      - mongo1
      - mongo2
      - mongo3
  mongo1:
    container_name: mongo1
    image: mongo:5.0
    volumes:
      - mongo1_data:/data/db
    ports:
      - 27017:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]
    depends_on:
      - mongo2
      - mongo3
  mongo2:
    container_name: mongo2
    image: mongo:5.0
    volumes:
      - mongo2_data:/data/db
    ports:
      - 27018:27018
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27018" ]
  mongo3:
    container_name: mongo3
    image: mongo:5.0
    volumes:
      - mongo3_data:/data/db
    ports:
      - 27019:27019
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27019" ]
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=es-cluster
      - discovery.type=single-node
      - cluster.routing.allocation.disk.threshold_enabled=false
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - xpack.monitoring.enabled=true
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-elastic_pw}
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.17.3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD:-elastic_pw}
      - XPACK_SECURITY_ENABLED=true
    volumes:
      - kibana_data:/usr/share/kibana/data
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
  filebeat:
    container_name: filebeat
    image: docker.elastic.co/beats/filebeat:7.17.3
    command: >
       filebeat -e
         --strict.perms=false
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
    environment:
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD:-elastic_pw}
      - ELASTICSEARCH_HOSTS="elasticsearch:9200"
      - KIBANA_HOST="kibana:5601"
    volumes:
      - ./docker/filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - .:/kytos:ro
      - filebeat_data:/usr/share/filebeat/data
    depends_on:
      - elasticsearch
  apm-server:
    container_name: apm
    image: docker.elastic.co/apm/apm-server:7.17.3
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    environment:
      - output.elasticsearch.hosts=["elasticsearch:9200"]
    ports:
      - "8200:8200"
    depends_on:
      - kibana
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E apm-server.auth.api_key.enabled=true
         -E apm-server.auth.secret_token=${ELASTIC_APM_SECRET_TOKEN:-elasticapm_token}
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E apm-server.kibana.username=${ELASTIC_USERNAME:-elastic}
         -E apm-server.kibana.password=${ELASTIC_PASSWORD:-elastic_pw}
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
         -E output.elasticsearch.username=${ELASTIC_USERNAME:-elastic}
         -E output.elasticsearch.password=${ELASTIC_PASSWORD:-elastic_pw}


volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  esdata:
  kibana_data:
  filebeat_data:
