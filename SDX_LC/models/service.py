# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from sdx_lc.models.base_model_ import Model
from sdx_lc import util


class Service(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, l2vpn_ptp=None, l2vpn_ptmp=None, monitoring_capability=None, owner=None, private_attributes=None, provisioning_system=None, provisioning_url=None, vendor=None):  # noqa: E501
        """Service - a model defined in Swagger

        :param l2vpn_ptp: The l2vpn_ptp of this Service.  # noqa: E501
        :type l2vpn_ptp: object
        :param l2vpn_ptmp: The l2vpn_ptmp of this Service.  # noqa: E501
        :type l2vpn_ptmp: object
        :param monitoring_capability: The monitoring_capability of this Service.  # noqa: E501
        :type monitoring_capability: str
        :param owner: The owner of this Service.  # noqa: E501
        :type owner: str
        :param private_attributes: The private_attributes of this Service.  # noqa: E501
        :type private_attributes: List[str]
        :param provisioning_system: The provisioning_system of this Service.  # noqa: E501
        :type provisioning_system: str
        :param provisioning_url: The provisioning_url of this Service.  # noqa: E501
        :type provisioning_url: str
        :param vendor: The vendor of this Service.  # noqa: E501
        :type vendor: List[str]
        """
        self.swagger_types = {
            'l2vpn_ptp': object,
            'l2vpn_ptmp': object,
            'monitoring_capability': str,
            'owner': str,
            'private_attributes': List[str],
            'provisioning_system': str,
            'provisioning_url': str,
            'vendor': List[str]
        }

        self.attribute_map = {
            'l2vpn_ptp': 'l2vpn-ptp',
            'l2vpn_ptmp': 'l2vpn-ptmp',
            'monitoring_capability': 'monitoring_capability',
            'owner': 'owner',
            'private_attributes': 'private_attributes',
            'provisioning_system': 'provisioning_system',
            'provisioning_url': 'provisioning_url',
            'vendor': 'vendor'
        }
        self._l2vpn_ptp = l2vpn_ptp
        self._l2vpn_ptmp = l2vpn_ptmp
        self._monitoring_capability = monitoring_capability
        self._owner = owner
        self._private_attributes = private_attributes
        self._provisioning_system = provisioning_system
        self._provisioning_url = provisioning_url
        self._vendor = vendor

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The service of this Service.  # noqa: E501
        :rtype: Service
        """
        return util.deserialize_model(dikt, cls)

    @property
    def l2vpn_ptp(self):
        """Gets the l2vpn_ptp of this Service.


        :return: The l2vpn_ptp of this Service.
        :rtype: object
        """
        return self._l2vpn_ptp

    @l2vpn_ptp.setter
    def l2vpn_ptp(self, l2vpn_ptp):
        """Sets the l2vpn_ptp of this Service.


        :param l2vpn_ptp: The l2vpn_ptp of this Service.
        :type l2vpn_ptp: object
        """

        self._l2vpn_ptp = l2vpn_ptp

    @property
    def l2vpn_ptmp(self):
        """Gets the l2vpn_ptmp of this Service.


        :return: The l2vpn_ptmp of this Service.
        :rtype: object
        """
        return self._l2vpn_ptmp

    @l2vpn_ptmp.setter
    def l2vpn_ptmp(self, l2vpn_ptmp):
        """Sets the l2vpn_ptmp of this Service.


        :param l2vpn_ptmp: The l2vpn_ptmp of this Service.
        :type l2vpn_ptmp: object
        """

        self._l2vpn_ptmp = l2vpn_ptmp

    @property
    def monitoring_capability(self):
        """Gets the monitoring_capability of this Service.


        :return: The monitoring_capability of this Service.
        :rtype: str
        """
        return self._monitoring_capability

    @monitoring_capability.setter
    def monitoring_capability(self, monitoring_capability):
        """Sets the monitoring_capability of this Service.


        :param monitoring_capability: The monitoring_capability of this Service.
        :type monitoring_capability: str
        """

        self._monitoring_capability = monitoring_capability

    @property
    def owner(self):
        """Gets the owner of this Service.


        :return: The owner of this Service.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this Service.


        :param owner: The owner of this Service.
        :type owner: str
        """

        self._owner = owner

    @property
    def private_attributes(self):
        """Gets the private_attributes of this Service.


        :return: The private_attributes of this Service.
        :rtype: List[str]
        """
        return self._private_attributes

    @private_attributes.setter
    def private_attributes(self, private_attributes):
        """Sets the private_attributes of this Service.


        :param private_attributes: The private_attributes of this Service.
        :type private_attributes: List[str]
        """

        self._private_attributes = private_attributes

    @property
    def provisioning_system(self):
        """Gets the provisioning_system of this Service.


        :return: The provisioning_system of this Service.
        :rtype: str
        """
        return self._provisioning_system

    @provisioning_system.setter
    def provisioning_system(self, provisioning_system):
        """Sets the provisioning_system of this Service.


        :param provisioning_system: The provisioning_system of this Service.
        :type provisioning_system: str
        """

        self._provisioning_system = provisioning_system

    @property
    def provisioning_url(self):
        """Gets the provisioning_url of this Service.


        :return: The provisioning_url of this Service.
        :rtype: str
        """
        return self._provisioning_url

    @provisioning_url.setter
    def provisioning_url(self, provisioning_url):
        """Sets the provisioning_url of this Service.


        :param provisioning_url: The provisioning_url of this Service.
        :type provisioning_url: str
        """

        self._provisioning_url = provisioning_url

    @property
    def vendor(self):
        """Gets the vendor of this Service.


        :return: The vendor of this Service.
        :rtype: List[str]
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor):
        """Sets the vendor of this Service.


        :param vendor: The vendor of this Service.
        :type vendor: List[str]
        """

        self._vendor = vendor
