# Install Python dependencies, run tests and lint.
#
# For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on:
  push:
    branches:
      - "main"
  pull_request:

permissions:
  contents: read

jobs:
  test:

    runs-on:
      - ubuntu-latest

    services:
      rabbitmq:
        image: rabbitmq:latest
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672
          - 15672:15672
      mongodb:
        image: mongo:3.7
        env:
          MONGO_INITDB_ROOT_USERNAME: guest
          MONGO_INITDB_ROOT_PASSWORD: guest
        ports:
          - 27017:27017

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # See https://github.com/marketplace/actions/setup-python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'  # caching pip dependencies

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 tox coveralls

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or
          # undefined names.
          python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

          # exit-zero treats all errors as warnings.
          python -m flake8 . --count --exit-zero --max-complexity=10 --statistics

      - name: Run tests
        run: |
          python -m tox
        env:
          SDXLC_HOST: 'localhost'
          SDXLC_DOMAIN: ''
          SDXLC_PORT: '8080'
          SDXLC_VERSION: '1.0.0'
          SDXLC_NAME: 'test-lc'
          MQ_HOST: 'localhost'
          MQ_NAME: 'hello'
          MQ_EXCHANGE: ''          
          SUB_QUEUE: 'test-queue'
          SUB_TOPIC: 'test-topic'
          SUB_EXCHANGE: 'test-exchange'
          DB_NAME: 'test-db'
          DB_CONFIG_TABLE_NAME: 'test-config-table'
          MONGODB_CONNSTRING: 'mongodb://guest:guest@localhost:27017/'

      - name: Send coverage data to coveralls.io
        run: |
          python -m coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true

  finalize:
    name: finalize
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Indicate completion to coveralls.io
        run: |
          pip --no-cache-dir install --upgrade coveralls
          python -m coveralls --service=github --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
